/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: github.com/TheThingsNetwork/ttn/api/protocol/protocol.proto */

#ifndef PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fprotocol_2fprotocol_2eproto__INCLUDED
#define PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fprotocol_2fprotocol_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "lorawan.pb-c.h"

typedef struct _Protocol__Message Protocol__Message;
typedef struct _Protocol__RxMetadata Protocol__RxMetadata;
typedef struct _Protocol__TxConfiguration Protocol__TxConfiguration;
typedef struct _Protocol__ActivationMetadata Protocol__ActivationMetadata;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  PROTOCOL__MESSAGE__PROTOCOL__NOT_SET = 0,
  PROTOCOL__MESSAGE__PROTOCOL_LORAWAN = 1,
} Protocol__Message__ProtocolCase;

struct  _Protocol__Message
{
  ProtobufCMessage base;
  Protocol__Message__ProtocolCase protocol_case;
  union {
    Lorawan__Message *lorawan;
  };
};
#define PROTOCOL__MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__message__descriptor) \
    , PROTOCOL__MESSAGE__PROTOCOL__NOT_SET, {0} }


typedef enum {
  PROTOCOL__RX_METADATA__PROTOCOL__NOT_SET = 0,
  PROTOCOL__RX_METADATA__PROTOCOL_LORAWAN = 1,
} Protocol__RxMetadata__ProtocolCase;

struct  _Protocol__RxMetadata
{
  ProtobufCMessage base;
  Protocol__RxMetadata__ProtocolCase protocol_case;
  union {
    Lorawan__Metadata *lorawan;
  };
};
#define PROTOCOL__RX_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__rx_metadata__descriptor) \
    , PROTOCOL__RX_METADATA__PROTOCOL__NOT_SET, {0} }


typedef enum {
  PROTOCOL__TX_CONFIGURATION__PROTOCOL__NOT_SET = 0,
  PROTOCOL__TX_CONFIGURATION__PROTOCOL_LORAWAN = 1,
} Protocol__TxConfiguration__ProtocolCase;

struct  _Protocol__TxConfiguration
{
  ProtobufCMessage base;
  Protocol__TxConfiguration__ProtocolCase protocol_case;
  union {
    Lorawan__TxConfiguration *lorawan;
  };
};
#define PROTOCOL__TX_CONFIGURATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__tx_configuration__descriptor) \
    , PROTOCOL__TX_CONFIGURATION__PROTOCOL__NOT_SET, {0} }


typedef enum {
  PROTOCOL__ACTIVATION_METADATA__PROTOCOL__NOT_SET = 0,
  PROTOCOL__ACTIVATION_METADATA__PROTOCOL_LORAWAN = 1,
} Protocol__ActivationMetadata__ProtocolCase;

struct  _Protocol__ActivationMetadata
{
  ProtobufCMessage base;
  Protocol__ActivationMetadata__ProtocolCase protocol_case;
  union {
    Lorawan__ActivationMetadata *lorawan;
  };
};
#define PROTOCOL__ACTIVATION_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protocol__activation_metadata__descriptor) \
    , PROTOCOL__ACTIVATION_METADATA__PROTOCOL__NOT_SET, {0} }


/* Protocol__Message methods */
void   protocol__message__init
                     (Protocol__Message         *message);
size_t protocol__message__get_packed_size
                     (const Protocol__Message   *message);
size_t protocol__message__pack
                     (const Protocol__Message   *message,
                      uint8_t             *out);
size_t protocol__message__pack_to_buffer
                     (const Protocol__Message   *message,
                      ProtobufCBuffer     *buffer);
Protocol__Message *
       protocol__message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__message__free_unpacked
                     (Protocol__Message *message,
                      ProtobufCAllocator *allocator);
/* Protocol__RxMetadata methods */
void   protocol__rx_metadata__init
                     (Protocol__RxMetadata         *message);
size_t protocol__rx_metadata__get_packed_size
                     (const Protocol__RxMetadata   *message);
size_t protocol__rx_metadata__pack
                     (const Protocol__RxMetadata   *message,
                      uint8_t             *out);
size_t protocol__rx_metadata__pack_to_buffer
                     (const Protocol__RxMetadata   *message,
                      ProtobufCBuffer     *buffer);
Protocol__RxMetadata *
       protocol__rx_metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__rx_metadata__free_unpacked
                     (Protocol__RxMetadata *message,
                      ProtobufCAllocator *allocator);
/* Protocol__TxConfiguration methods */
void   protocol__tx_configuration__init
                     (Protocol__TxConfiguration         *message);
size_t protocol__tx_configuration__get_packed_size
                     (const Protocol__TxConfiguration   *message);
size_t protocol__tx_configuration__pack
                     (const Protocol__TxConfiguration   *message,
                      uint8_t             *out);
size_t protocol__tx_configuration__pack_to_buffer
                     (const Protocol__TxConfiguration   *message,
                      ProtobufCBuffer     *buffer);
Protocol__TxConfiguration *
       protocol__tx_configuration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__tx_configuration__free_unpacked
                     (Protocol__TxConfiguration *message,
                      ProtobufCAllocator *allocator);
/* Protocol__ActivationMetadata methods */
void   protocol__activation_metadata__init
                     (Protocol__ActivationMetadata         *message);
size_t protocol__activation_metadata__get_packed_size
                     (const Protocol__ActivationMetadata   *message);
size_t protocol__activation_metadata__pack
                     (const Protocol__ActivationMetadata   *message,
                      uint8_t             *out);
size_t protocol__activation_metadata__pack_to_buffer
                     (const Protocol__ActivationMetadata   *message,
                      ProtobufCBuffer     *buffer);
Protocol__ActivationMetadata *
       protocol__activation_metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protocol__activation_metadata__free_unpacked
                     (Protocol__ActivationMetadata *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Protocol__Message_Closure)
                 (const Protocol__Message *message,
                  void *closure_data);
typedef void (*Protocol__RxMetadata_Closure)
                 (const Protocol__RxMetadata *message,
                  void *closure_data);
typedef void (*Protocol__TxConfiguration_Closure)
                 (const Protocol__TxConfiguration *message,
                  void *closure_data);
typedef void (*Protocol__ActivationMetadata_Closure)
                 (const Protocol__ActivationMetadata *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor protocol__message__descriptor;
extern const ProtobufCMessageDescriptor protocol__rx_metadata__descriptor;
extern const ProtobufCMessageDescriptor protocol__tx_configuration__descriptor;
extern const ProtobufCMessageDescriptor protocol__activation_metadata__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fprotocol_2fprotocol_2eproto__INCLUDED */
