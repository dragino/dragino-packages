#!/bin/sh /etc/rc.common

START=58
USE_PROCD=1

init_board() {
    echo 15 > /sys/class/gpio/export
	echo low > /sys/class/gpio/gpio15/direction
	service=`uci get gateway.general.server_type`
	provider=`uci get gateway.server1.provider`
	gwcfg=`uci get gateway.general.gwcfg`

	if [[ "$service" = "tcpudp" ]]; then
		process="tcp_process.sh"
	elif [[ "$service" = "mqtt" ]]; then
		process="mqtt_process.sh"
	elif [[ "$service" = "lorawan" ]]; then
		if [[ "$provider" = "helium" ]]; then
			logger "Start Helium-gateway-rs"
			regino_check_seetting="$(cat /etc/helium_gateway/settings.toml | grep region -c)"
			regino_check_default="$(cat /etc/helium_gateway/default.toml | grep region -c)"
			logger  test "$regino_check_seetting" "$regino_check_default" "$gwcfg"
			if [[ "$gwcfg"  = "EU" ]];then
				region="EU868"
			elif [[ "$gwcfg" = "US" ]];then
				region="US915"
			elif [[ "$gwcfg" = "AU" ]];then
				region="AU915"
			elif [[ "$gwcfg" = "CN" ]];then
				region="CN470"
			elif [[ "$gwcfg" = "IN" ]];then
				region="IN865"
			elif [[ "$gwcfg" = "RU" ]];then
				region="RU864"
			elif [[ "$gwcfg" = "AS1_2" ]] || [[ "$gwcfg" = "AS1" ]] || [[ "$gwcfg" = "KR" ]]; then
				region="AS923_1"
			elif [[ "$gwcfg" = "AS2" ]]; then
				region="AS923_2"
			elif [[ "$gwcfg" = "AS3" ]]; then
				region="AS923_3"
			elif [[ "$gwcfg" = "AS4" ]]; then
				region="AS923_4"
			fi
		
		if [[ "$regino_check_seetting" = "0" ]] ; then
				sed -i "1 i\region = \"${region}\"" /etc/helium_gateway/settings.toml
		else
				sed -i '/region/d' /etc/helium_gateway/settings.toml
				sed -i "1 i\region = \"${region}\"" /etc/helium_gateway/settings.toml	
		fi

		if [[ "$regino_check_default" = "0" ]]; then
			sed -i "20 i\region = \"${region}\"" /etc/helium_gateway/default.toml
		else
			sed -i '/region/d' /etc/helium_gateway/default.toml
			sed -i "20 i\region = \"${region}\"" /etc/helium_gateway/default.toml
		fi
		/etc/init.d/helium_gateway start		
	else
		/etc/init.d/helium_gateway stop
	fi
		
	elif [[ "$service" = "customized" ]]; then
		process=`uci get customized_script.general.script_name`
		chmod +x /etc/lora/customized_scripts/$process
		ln -f /etc/lora/customized_scripts/$process /usr/bin/$process
	elif [[ "$service" = "loriot" ]]; then
		LORIOT_URL=`uci -q get loriot.loriot.url`
		process="loriot_dragino_lg308_spi"
		option="-f -s ${LORIOT_URL}"
		/usr/bin/${process} ${option}  > /dev/null 
		exit
	elif [[ "$service" = "station" ]]; then
		logger "Start station"
		# must run pkt_fwd or fwd first then kill it to make sure the station runs.
		# /etc/init.d/lora_gw stop
		sleep 10;
		cd /etc/station && station -L /var/iot/station.log -d
		logger "Finished station"
		# make sure pkt_fwd has benn killed
		# /etc/init.d/lora_gw stop
		exit
	
	fi
}

start_service() {
    init_board
    procd_open_instance
    procd_set_param command /usr/bin/"$process"
    procd_set_param stdout 1
    procd_set_param respawn
    procd_set_param pidfile /var/run/"$process".pid
    procd_close_instance
}

stop_service() {
    
    STATION=`pidof station`
    [[ -n "$STATION" ]] && killall station
}

reload_service() {
    stop
    start
}

service_triggers()
{
    procd_add_reload_trigger "network" "wireless" "gateway" "mqtt" "tcp_client" "customized_script" "loriot_dragino_lg308_spi"
}

