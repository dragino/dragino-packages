#!/usr/bin/haserl

<%  echo -en "content-type: text/html\r\n\r\n"  # RF2616 Compliance %>

<%# --- Get the variables for the HTML page --- %>
<%
FM="<br><br>"
LINE1="<hr style=\"height:2px;border:none;border-top:2px ridge green;\" width=\"100%\"/>"
LINE2="<hr style=\"height:1px;border:none;border-top:1px ridge black;\" width=\"100%\"/>"
%>

<!DOCTYPE html>
<html lang="en">
<head>
	<%inc /www/cgi-bin/inc/head.inc %>
	<link rel="stylesheet" type="text/css" href="//netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"/>
</head>

<body>

<%inc /www/cgi-bin/inc/menu.inc %>

<div class="page-container">
	<h2> </h2>
	<div id="main" style="width: 1200px;height:400px;"></div>
	<table border="0" cellspacing="0" cellpadding="10px" style="text-align: center; width: 1200px;">
			<tr style="background-color: #C9C6ED;">
				<th></th>
				<th>Time</th>
				<th>Message Type</th>
				<th>Mod</th>
				<th>Freq</th>
				<th>Data Rate</th>
				<th>CNT</th>
				<th>Content</th>
			</tr>
			<%
				num=1
				sqlite3 /var/lgwdb.sqlite "select * from livepkts order by id desc ;" | while read line
				do
					CONTENT_1=
					DR=`echo $line | awk -F '|' '{print $8}' | sed 's/KHz CR4\/5//'`
					eval $(echo $line | awk -F '|' '{printf("TIME=%s;M_Type=%s;MOD=%s;FRE=%s;CNT=%s",$2,$5,$6,$7,$9);}')
					
					if [ $(($num%2)) -eq 0 ];then
						color="F2F6FC"
					else
						color="DADEEE"
					fi 
					CONTENT_2=`echo $line | awk -F '{' '{print $2}'`					
					if [ "${M_Type}" == "JOIN_REQ_UP" ];then
						ICOLOR="orange"
						ICON="fa fa-bolt"
						M_Type="Join Request"
						eval $(echo $line | awk -F '[}{,:]' '{printf("APP_EUI=%s;D_EUI=%s",$12,$14);}')
						CONTENT_1="DevEui: $D_EUI,AppEUI: $APP_EUI"
					elif [ "${M_Type}" == "JOIN_ACCEPT_DOWN"  ];then
						ICOLOR="green"
						ICON="fa fa-bolt"
						M_Type="Join Accept"
						eval $(echo $line | awk -F '[}{,:]' '{printf("NET_ID=%s;DADDR=%s",$8,$10);}')
						CONTENT_1="NetID: $NET_ID,Dev Addr: $DADDR"
					elif [ "${M_Type}" == "DATA_UNCONF_UP"  ] || [ "${M_Type}" == "DATA_CONF_UP"  ] ;then
						[ "${M_Type}" == "DATA_UNCONF_UP"  ] && M_Type="Data Unconfirmed Up"
						[ "${M_Type}" == "DATA_CONF_UP"  ] && M_Type="Data Confirmed Up"
						ICOLOR="blue"
						ICON="fa fa-chevron-up"
						eval $(echo $line | awk -F '[{,:]' '{printf("DADDR=%s;SIZE=%s",$6,$8);}')
						CONTENT_1="Dev Addr: $DADDR, Size: $SIZE"
					elif [ "${M_Type}" == "DATA_UNCONF_DOWN"  ] || [ "${M_Type}" == "DATA_CONF_DOWN"  ] ;then
						[ "${M_Type}" == "DATA_UNCONF_DOWN"  ] && M_Type="Data Unconfirmed Down"
						[ "${M_Type}" == "DATA_CONF_DOWN"  ] && M_Type="Data Confirmed Down"
						ICOLOR="dark"
						ICON="fa fa-chevron-down"
						eval $(echo $line | awk -F '[{,:]' '{printf("DADDR=%s;SIZE=%s",$6,$8);}')
						CONTENT_1="Dev Addr: $DADDR, Size: $SIZE"
					elif [ "${M_Type}" == "RFU"  ] || [ "${M_Type}" == "Proprietary"  ] ;then
						ICOLOR="purple"
						ICON="fa fa-gear"
					else 
						ICOLOR="red"
						ICON="fa fa-question"						
					fi
			%>
				<tr style="background-color: #<% echo -n "$color" %>;">
					<td><i class="<% echo -n "$ICON" %>" style="color: <% echo -n "$ICOLOR" %>; font-size: 12px;" onclick="spread<% echo -n "$num" %>();"></i></td>
					<td><% echo -n "$TIME" %></td>
					<td><% echo -n "$M_Type" %></td>
					<td><% echo -n "$MOD" %></td>
					<td><% echo -n "$FRE" %></td>
					<td><% echo -n "$DR" %></td>
					<td><% echo -n "$CNT" %></td>
					<td><% echo -n "$CONTENT_1" %></td>
				</tr>
				<tr id="<% echo -n "$num" %>" style="display: none;">
					<td colspan="8" style="text-align: left;">
						<% echo -n "{$CONTENT_2" %>
					</td>
				</tr>
			<% 
				num=`expr $num + 1`
			done 
			%>
		</table>
		
<script type="text/javascript">
	<% for num1 in $(seq 1 130);do %>
	let flag<% echo -n "$num1" %> = true;
	function spread<% echo -n "$num1" %>(){
		if(flag<% echo -n "$num1" %>){
			document.getElementById("<% echo -n "$num1" %>").style.display="table-row";
			flag<% echo -n "$num1" %> = false;
		}else{
			document.getElementById("<% echo -n "$num1" %>").style.display="none";
			flag<% echo -n "$num1" %> = true;
		}
	}
	<% done %>
</script> 

	<%
		hour_up_report="`sqlite3 /var/lgwdb.sqlite "select * from gwdb where key like '/fwd/pkts/hours/up/%/%';" | sed 's/\/fwd\/pkts\/hours\/up\///'`"
		hour_down_report="`sqlite3 /var/lgwdb.sqlite "select * from gwdb where key like '/fwd/pkts/hours/down/%/%';" | sed 's/\/fwd\/pkts\/hours\/down\///'`"
		total="`sqlite3 /var/lgwdb.sqlite "select * from gwdb where key = '/fwd/pkts/total';" | awk -F '|' '{print $2}'`"
		total_up="`sqlite3 /var/lgwdb.sqlite "select * from gwdb where key = '/fwd/pkts/up/total';" | awk -F '|' '{print $2}'`"
		total_down="`sqlite3 /var/lgwdb.sqlite "select * from gwdb where key = '/fwd/pkts/down/total';" | awk -F '|' '{print $2}'`"
		hour=
		updata=
		downdata=
		for line in `echo $hour_up_report`;do
			hour="$hour,'`echo $line |awk -F '|' '{print $1}'`'"
			updata="$updata,`echo $line |awk -F '|' '{print $2}'`"
		done

		for line in `echo $hour_down_report`;do
			downdata="$downdata,`echo $line |awk -F '|' '{print $2}'`"
        done

		hour=`echo $hour | awk '{print substr($1,2)}'`
		updata=`echo $updata | awk '{print substr($1,2)}'`
		downdata=`echo $downdata | awk '{print substr($1,2)}'`
	%>
	<script src="/static/resources/jquery.min.js"></script>
	<script src="/static/resources/echarts.min.js"></script>
	<script>
		
		var myChart = echarts.init(document.getElementById('main'));
		
		var option = {
			title: {
				text: 'Gateway Traffic',
				subtext: 'Total: <% echo -n "$total" %>; Up: <% echo -n "$total_up" %>; Down: <% echo -n "$total_down" %>'
			},
			tooltip: {
				trigger: 'axis',
				axisPointer: {
					type: 'cross',
					label: {
						backgroundColor: '#6a7985'
					}
				}
			},
			legend: {
				data: ['Uplink', 'Downlink'],
			},
			toolbox: {
				feature: {
					saveAsImage: {}
				}
			},
			grid: {
				left: '3%',
				right: '4%',
				bottom: '3%',
				containLabel: true
			},
			xAxis: [
				{
					type: 'category',
					boundaryGap: false,
					data: [<% echo -n "$hour" %>],
					axisLabel : {
						interval:0,
						rotate:"45"
					}
				}
			],
			yAxis: [
				{
					type: 'value'
				}
			],
			series: [
				{
					name: 'Uplink',
					type: 'line',
					areaStyle: {},
					data: [<% echo -n "$updata" %>],
				},
				{
					name: 'Downlink',
					type: 'line',
					areaStyle: {},
					data: [<% echo -n "$downdata" %>],
				}
			],
			dataZoom : [
				{
					type: 'slider',
					show: true,
					start: 80,
					end: 100,
					handleSize: 8
				},
				{
					type: 'inside',
					start: 80,
					end: 100
				}
			]
		};
		myChart.setOption(option);
	</script>
	<script type="text/javascript">
		$(document).ready(function () {
			fresh();
		});

		function fresh() {
			$("#stat").load(location.href + " #stat");
			setTimeout("fresh()", 1000 * 5);
		}
	</script>

</body>
</html>
